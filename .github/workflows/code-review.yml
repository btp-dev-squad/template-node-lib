name: GitHub Copilot Code Review
on: 
  pull_request:
    types: [opened, synchronize]

jobs:
  review: 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      actions: read
    steps:
      - name: Checkout Code 
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for diff

      - name: Setup GitHub CLI with Copilot
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh extension install github/gh-copilot

      - name: Get PR diff and generate review
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get the PR diff
          PR_NUMBER=${{ github.event.pull_request.number }}
          
          # Get changed files
          CHANGED_FILES=$(gh pr diff $PR_NUMBER --name-only)
          
          echo "## ðŸ¤– Copilot Code Review" > review.md
          echo "" >> review.md
          
          # For each changed file, ask Copilot for review
          for file in $CHANGED_FILES; do
            if [[ -f "$file" ]]; then
              echo "### ðŸ“„ $file" >> review.md
              
              # Get file content and ask Copilot to review
              PROMPT="Review this code for security vulnerabilities, performance issues, and missing error handling: $(cat $file)"
              REVIEW=$(gh copilot suggest "$PROMPT" 2>/dev/null || echo "Unable to review this file")
              
              echo "$REVIEW" >> review.md
              echo "" >> review.md
            fi
          done

      - name: Post Review Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            try {
              const review = fs.readFileSync('review.md', 'utf-8');
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: review
              });
            } catch (error) {
              console.error('Error posting review:', error);
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '## ðŸ¤– Copilot Code Review\n\nUnable to generate review at this time. Please try again later.'
              });
            }